/* Copyright (c) 2006, Sun Microsystems, Inc.
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 * 
 *     * Redistributions of source code must retain the above copyright notice,
 *       this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of the Sun Microsystems, Inc. nor the names of its
 *       contributors may be used to endorse or promote products derived from
 *       this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
 */

The example in this directory takes an extension of Java as input and
converts it into proper Java.  The purpose of this example is to
illustrate:

1. The use of the "next" field of tokens.

2. To illustrate how one can use JJTree to build a parse tree for a
   small part of the input and ignore the rest of the file.

3. Combine 1 and 2 to process the portion for which tree nodes are
   created and leave the rest of the file unchanged.

The Java language extension handled by the grammar (ToyJava.jjt)
allows catch and finally specifications at the end of method blocks.
So the following is allowed (as an example):

	void foo() {
	  ...
	} catch (Exception e) {
	  ...
	}

The grammar file ToyJava.jjt is a modification of Java1.1.jj.  Note
how we have changed the SKIP tokens to SPECIAL_TOKENS so that the
output file is identical to the input file.

To try this out, type:

	jjtree ToyJava.jjt
	javacc ToyJava.jj
	javac *.java
	java ToyParser divide.toy divide.java

And then compare divide.java to divide.toy.
